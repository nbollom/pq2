cmake_minimum_required(VERSION 3.27)
project(pq2)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
Set(FETCHCONTENT_QUIET OFF)

if (MSVC)
    add_compile_options(/W4 /WX)
else()
    add_compile_options(-Wall -Wextra -Wpedantic -Werror)
endif()

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

add_subdirectory(game)
add_subdirectory(utils)
add_subdirectory(gui)

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    option(WINFORMS_ENABLED "Enable native Windows interface" ON)
    set(COCOA_ENABLED OFF)
    set(NCURSES_ENABLED OFF)
    option(QT_ENABLED "Enable QT interface" OFF)
    option(GTK_ENABLED "Enable GTK interface" OFF)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    option(COCOA_ENABLED "Enable native MacOS interface" ON)
    option(NCURSES_ENABLED "Enable NCurses interface" ON)
    set(WINFORMS_ENABLED OFF)
    option(QT_ENABLED "Enable QT interface" OFF)
    option(GTK_ENABLED "Enable GTK interface" OFF)
else()
    option(NCURSES_ENABLED "Enable NCurses interface" ON)
    set(WINFORMS_ENABLED OFF)
    set(COCOA_ENABLED OFF)
    option(QT_ENABLED "Enable QT interface" ON)
    option(GTK_ENABLED "Enable GTK interface" ON)
endif ()
option(QT_ENABLED "Enable QT interface" ON)
option(GTK_ENABLED "Enable GTK interface" ON)

if (${QT_ENABLED})
    add_subdirectory(qt)
    add_executable(pq2-qt main.cpp)
    set_target_properties(pq2-qt PROPERTIES OUTPUT_NAME pq2qt)
    target_compile_definitions(pq2-qt PRIVATE QT_ENABLED)
    target_link_libraries(pq2-qt pq2game pq2utils pq2gui pq2qt)
    target_include_directories(pq2-qt PRIVATE pq2game pq2utils pq2gui pq2qt)
endif ()
if(${GTK_ENABLED})
    add_subdirectory(gtk)
    add_executable(pq2-gtk main.cpp)
    set_target_properties(pq2-gtk PROPERTIES OUTPUT_NAME pq2gtk)
    target_compile_definitions(pq2-gtk PRIVATE GTK_ENABLED)
    target_link_libraries(pq2-gtk pq2game pq2utils pq2gui pq2gtk)
    target_include_directories(pq2-gtk PRIVATE pq2game pq2utils pq2gui pq2gtk)
endif ()
if(${WINFORMS_ENABLED})
#    add_subdirectory(win)
#    add_executable(pq2-win main.cpp)
#    set_target_properties(pq2-win PROPERTIES OUTPUT_NAME pq2win)
#    target_compile_definitions(pq2-win PRIVATE WINFORMS_ENABLED)
#    target_link_libraries(pq2-win pq2game pq2utils pq2gui pq2win)
#    target_include_directories(pq2-win PRIVATE pq2game pq2utils pq2gui pq2win)
endif ()
if(${COCOA_ENABLED})
    add_subdirectory(mac)
    add_executable(pq2-mac MACOSX_BUNDLE main.cpp)
    set_target_properties(pq2-mac PROPERTIES BUNDLE True
        MACOSX_BUNDLE_GUI_IDENTIFIER net.thefatninja.pq2
        MACOSX_BUNDLE_BUNDLE_NAME "Progress Quest 2"
        MACOSX_BUNDLE_BUNDLE_VERSION "0.1"
        MACOSX_BUNDLE_SHORT_VERSION_STRING "0.1"
        MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_SOURCE_DIR}/mac/pq2.plist.in
    )
    target_compile_definitions(pq2-mac PRIVATE COCOA_ENABLED)
    target_link_libraries(pq2-mac pq2game pq2utils pq2gui pq2mac)
    target_include_directories(pq2-mac PRIVATE pq2game pq2utils pq2gui pq2mac)
endif ()
if(${NCURSES_ENABLED})
    add_subdirectory(ncurses)
    add_executable(pq2-ncurses main.cpp)
    set_target_properties(pq2-ncurses PROPERTIES OUTPUT_NAME pq2ncurses)
    target_compile_definitions(pq2-ncurses PRIVATE NCURSES_ENABLED)
    target_link_libraries(pq2-ncurses pq2game pq2utils pq2gui pq2ncurses)
    target_include_directories(pq2-ncurses PRIVATE pq2game pq2utils pq2gui pq2ncurses)
endif ()
